// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int      @id @default(autoincrement())
  username String   @unique
  password String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  visionBoards VisionBoard[]
}

model VisionBoard {
  id          Int          @id @default(autoincrement())
  user        User         @relation(fields: [userId], references: [id])
  userId      Int
  title       String
  boardData   Json         // Stores the layout, positions, image URLs, etc.
  imageUrl    String?  // Add this field to store the image path
  comments    Comment[]
  likes       Like[]
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}

model Comment {
  id           Int           @id @default(autoincrement())
  user         User          @relation(fields: [userId], references: [id])
  userId       Int
  visionBoard  VisionBoard   @relation(fields: [visionBoardId], references: [id])
  visionBoardId Int
  text         String
  createdAt    DateTime      @default(now())
}

model Like {
  id           Int           @id @default(autoincrement())
  user         User          @relation(fields: [userId], references: [id])
  userId       Int
  visionBoard  VisionBoard   @relation(fields: [visionBoardId], references: [id])
  visionBoardId Int
  createdAt    DateTime      @default(now())
}